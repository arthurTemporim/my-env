#!/bin/bash

#######################################################
# SET VIM AS DEFAULT EDITOR WHEN INSTALLING
#######################################################

export VISUAL="vim"

#######################################################
# SHOW GIT BRANCH
#######################################################

function git_branch_name() {
  git branch 2>/dev/null | grep -e '^*' | sed -E 's/^\* (.+)$/\1/'
}

#######################################################
# SHOW BATTERY PERCENTAGE **UNDONE**
#######################################################

function battery_percentage {
  cat /sys/class/power_supply/BAT0/capacity
}


#######################################################
# DETERMINE ACTIVE PYTHON VIRTUALENV DETAILS
#######################################################
function set_virtualenv () {
  if test -z "$VIRTUAL_ENV" ; then
      echo ""
  else
      echo "`basename \"$VIRTUAL_ENV\"`"
  fi
}


#######################################################
# COLOR BATTERY PERCENTAGE
#######################################################

function color_battery {
  #PS1+="\[${GREEN}\]($(color_battery)$(battery_percentage)\[${GREEN}\]):"
  local RED="\033[1;31m"
  local YELLOW="\033[1;33m"
    echo ${YELLOW}$1
}


#######################################################
# HISTORY
#######################################################

# Expand the history size
export HISTFILESIZE=
export HISTSIZE=

# Causes bash to append to history instead of overwriting it so if you start a new terminal, you have old session history
shopt -s histappend
PROMPT_COMMAND='history -a'


#######################################################
# COLORS
#######################################################

# To have colors for ls and all grep commands such as grep, egrep and zgrep
export CLICOLOR=1
export LS_COLORS='no=00:fi=00:di=00;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:*.xml=00;31:'

# Color for manpages in less makes manpages a little easier to read
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'


#######################################################
# SHELL
#######################################################

function __setprompt
{
  local LAST_COMMAND=$? # Must come first!

  # Define colors
  local LIGHTGRAY="\033[0;37m"
  local WHITE="\033[1;37m"
  local BLACK="\033[0;30m"
  local GREEN="\033[1;32m"
  local RED="\033[0;31m"
  local LIGHTRED="\033[1;31m"
  local DARKGRAY="\033[0;30m"
  local LIGHTGREEN="\033[0;32m"
  local BROWN="\033[0;33m"
  local YELLOW="\033[1;33m"
  local BLUE="\033[0;34m"
  local DARKBLUE="\033[2;34m"
  local LIGHTBLUE="\033[1;34m"
  local MAGENTA="\033[0;35m"
  local LIGHTMAGENTA="\033[1;35m"
  local CYAN="\033[1;36m"
  local LIGHTCYAN="\033[1;36m"
  local NOCOLOR="\033[0m"

  # Show error exit code if there is one
  if [[ $LAST_COMMAND != 0 ]]; then
    PS1="\[${GREEN}\](\[${LIGHTRED}\]ERROR\[${GREEN}\])-(\[${RED}\]Exit Code \[${LIGHTRED}\]${LAST_COMMAND}\[${GREEN}\])-(\[${RED}\]"
    if [[ $LAST_COMMAND == 1 ]]; then
      PS1+="General error"
    elif [ $LAST_COMMAND == 2 ]; then
      PS1+="Missing keyword, command, or permission problem"
    elif [ $LAST_COMMAND == 126 ]; then
      PS1+="Permission problem or command is not an executable"
    elif [ $LAST_COMMAND == 127 ]; then
      PS1+="Command not found"
    elif [ $LAST_COMMAND == 128 ]; then
      PS1+="Invalid argument to exit"
    elif [ $LAST_COMMAND == 129 ]; then
      PS1+="Fatal error signal 1"
    elif [ $LAST_COMMAND == 130 ]; then
      PS1+="Script terminated by Control-C"
    elif [ $LAST_COMMAND == 131 ]; then
      PS1+="Fatal error signal 3"
    elif [ $LAST_COMMAND == 132 ]; then
      PS1+="Fatal error signal 4"
    elif [ $LAST_COMMAND == 133 ]; then
      PS1+="Fatal error signal 5"
    elif [ $LAST_COMMAND == 134 ]; then
      PS1+="Fatal error signal 6"
    elif [ $LAST_COMMAND == 135 ]; then
      PS1+="Fatal error signal 7"
    elif [ $LAST_COMMAND == 136 ]; then
      PS1+="Fatal error signal 8"
    elif [ $LAST_COMMAND == 137 ]; then
      PS1+="Fatal error signal 9"
    elif [ $LAST_COMMAND -gt 255 ]; then
      PS1+="Exit status out of range"
    else
      PS1+="Unknown error code"
    fi
    PS1+="\[${GREEN}\])\[${NOCOLOR}\]\n"
  else  
    PS1=""
  fi

  # Host and User
  PS1+="\[${GREEN}\](\[${CYAN}\]\u@\h\[${GREEN}\]):"
  # Show only the host
  #PS1+="\[${GREEN}\](\[${CYAN}\]\h\[${GREEN}\]):"

  # Show battery percentage
  PS1+="\[${GREEN}\]($(color_battery)$(battery_percentage)\[${GREEN}\]):"

  # Date
  #PS1+="\[${GREEN}\](\[${DARKGRAY}\]\$(date +%a) $(date +%b-'%-m')" # Date
  # Show only the time
  PS1+="\[${GREEN}\](\[${WHITE}\]$(date +'%-I':%M:%S%P)\[${GREEN}\]):" # Time

  # Current directory
  PS1+="\[${GREEN}\](\[${DARKBLUE}\]\w\[${GREEN}\])"

  # Show git branch
  PS1+="\[${GREEN}\]:(\[\033[31m\]\$(git_branch_name)\[${GREEN}\])"

  # Show python virtualenv 
  PS1+="\[${GREEN}\]:(\[${CYAN}\]\$(set_virtualenv)\[${GREEN}\])"

  # The last color will be used by the rest of the shell
  PS1+="$\n\[${LIGHTGREEN}\]"

  # PS2 is used to continue a command using the \ character
  PS2="\[${GREEN}\]>\[${NOCOLOR}\] "

  # PS3 is used to enter a number choice in a script
  PS3='Please enter a number from above list: '

  # PS4 is used for tracing a script in debug mode
  PS4='\[${GREEN}\]+\[${NOCOLOR}\] '
}
PROMPT_COMMAND='__setprompt'


#######################################################
# MORE
#######################################################

# Check the window size after each command and, if necessary, update the values of LINES and COLUMNS
shopt -s checkwinsize


#######################################################
# PYTHON
#######################################################

# VirtualEnv python
export WORKON_HOME=~/.virtualenvs
source /usr/bin/virtualenvwrapper.sh


#######################################################
# RUBY
#######################################################

#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"


#######################################################
# ALIASES
#######################################################

alias baixar="youtube-dl --extract-audio --audio-format mp3 $1"

alias hotspot="sudo create_ap -m nat wlp3s0 enp2s0 TempoArch temposenha;"

#######################################################
# GAMBIRAS
#######################################################

# LOCALE issue
export LANG=en_US.UTF-8

# Shell grep issue
alias grep="/usr/bin/grep $GREP_OPTIONS"
unset GREP_OPTIONS

#######################################################
# SHOW LS COLORED
#######################################################

alias ls='ls --color'

